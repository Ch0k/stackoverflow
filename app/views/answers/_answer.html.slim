- if answer.persisted?
  p = answer.body
  p Links:
  ul
    - answer.links.each do |link|
      li= link_to link.name, link.url
  - if answer.files.attached?
    - answer.files.each do |file|
      p= link_to file.filename.to_s, url_for(file)
  - if current_user && current_user.author_of?(answer)
    .vote
      = answer.votes.count
      = image_tag 'like.png', class: 'like'
      = answer.unvotes.count
      = image_tag 'like.png', class: 'unlike'
  - elsif current_user
    .vote
      = answer.votes.count
      - if answer.voted?(current_user)
        = link_to delete_vote_answer_url(answer)
          = image_tag 'like.png', class: 'like like-green'
      - elsif !(answer.unvoted?(current_user))
        = link_to vote_answer_url(answer)
          = image_tag 'like.png', class: 'like'
      - else
        = image_tag 'like.png', class: 'like'
      = answer.unvotes.count
      - if answer.unvoted?(current_user)
        = link_to delete_unvote_answer_url(answer)
          = image_tag 'like.png', class: 'unlike like-green'
      - elsif !(answer.voted?(current_user))
        = link_to unvote_answer_url(answer)
          = image_tag 'like.png', class: 'unlike'
      - else
        = image_tag 'like.png', class: 'unlike'
  - if current_user && current_user.author_of?(answer)
    = link_to 'Edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id }
    = link_to 'Delete answer', answer_path(answer), method: :delete, remote: true, class: 'link-delete'
  .line
= form_with model: answer, local: false, class: 'hidden edit_answer', html: { id: "edit-answer-#{answer.id}" } do |f|
  h5 = f.label :body
  p = f.text_area :body
  - if answer.files.attached?
    - f.object.files.each do |file|
      p= link_to file.filename.to_s, url_for(file)
      - if current_user && current_user.author_of?(answer)
        = link_to 'Remove', delete_file_attachment_answer_url(file), method: :delete, remote: true, class: 'link-delete'
  p
    = f.label :files
    = f.file_field :files, multiple: true, direct_upload: true
    p Links:
    p
      = f.fields_for :links do |l|
        = render 'link_fields', f: l
      .links
        = link_to_add_association 'add link', f, :links
  = f.submit 'Update answer'
